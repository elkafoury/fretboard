{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf840
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl220\partightenfactor0

\f0\fs20 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include <MIDI.h>\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
const byte octaves[12][6][5]\'a0 =\
\{\
\'a0 \{\
\'a0\'a0\'a0 \{0,\'a0\'a0 0,\'a0 0,0,0\},//0\
\'a0\'a0\'a0 \{59, 60, 61,0,0\},\
\'a0\'a0\'a0 \{55, 56, 0 ,0,0\},\
\'a0\'a0\'a0 \{50, 51, 0 ,0,0\},\
\'a0\'a0\'a0 \{45, 46, 0 ,0,0\},\
\'a0\'a0\'a0 \{40, 41, 42,0,0\}\
\'a0 \},\
\'a0 \{\
\'a0\'a0\'a0 \{64,65,66,0,0\},//1\
\'a0\'a0\'a0 \{0, 0, 0,62,63\},\
\'a0\'a0\'a0 \{0, 0, 57,58,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 47 ,48,49\},\
\'a0\'a0\'a0 \{0, 0, 0,43,44\}\
\'a0 \},\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{0,67,68,0,0\},//2\
\'a0\'a0\'a0 \{0, 0, 0,0,0\},\
\'a0\'a0\'a0 \{0, 0, 59,60,61\},\
\'a0\'a0\'a0 \{52, 53, 54 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,50,51\},\
\'a0\'a0\'a0 \{0, 0, 0\'a0 ,45,46\}\
\'a0 \},\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{69,70,0,0,0\},//3\
\'a0\'a0\'a0 \{64, 65, 66,0,0\},\
\'a0\'a0\'a0 \{0, 0, 62,63,0\},\
\'a0\'a0\'a0 \{55,56, 0 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 47\'a0 ,48,49\}\
\'a0 \},\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{71,\'a0\'a0 72,\'a0 73,0,0\},//4\
\'a0\'a0\'a0 \{0, 67, 68,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{57, 58, 0 ,0,0\},\
\'a0\'a0\'a0 \{52, 53,54,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0,50,51\}\
\'a0 \},\
\'a0 \{\
\'a0\'a0\'a0 \{0,74,75,0,0\},//5\
\'a0\'a0\'a0 \{0, 69,70,0,0\},\
\'a0\'a0\'a0 \{64, 65, 66,0,0\},\
\'a0\'a0\'a0 \{59, 60, 61 ,0,0\},\
\'a0\'a0\'a0 \{0, 55,56 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0,0,0\}\
\'a0 \},\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{0, 0,\'a0 0, 0,0 \},//6\
\'a0\'a0\'a0 \{0, 0, 71,72,73\},\
\'a0\'a0\'a0 \{0, 0, 67,68,0\},\
\'a0\'a0\'a0 \{0, 0, 62 ,63,0\},\
\'a0\'a0\'a0 \{0, 0, 57 ,58,0\},\
\'a0\'a0\'a0 \{0, 0, 52 ,53,54\}\
\'a0 \},\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{76,77,78,0,0\},//7\
\'a0\'a0\'a0 \{0, 0, 0,74,75\},\
\'a0\'a0\'a0 \{0, 0, 69,70,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 59,60,61\},\
\'a0\'a0\'a0 \{0, 0, 0\'a0 ,55,56\}\
\'a0 \},\
\'a0\'a0\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{0, 79, 80,0,0\},//8\
\'a0\'a0\'a0 \{0, 0, 0,0,0\},\
\'a0\'a0\'a0 \{0, 0, 71 ,72,73\},\
\'a0\'a0\'a0 \{64, 65, 66 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,62,63\},\
\'a0\'a0\'a0 \{0,0, 0,57,58\}\
\'a0 \},\
\'a0 \{\
\'a0\'a0\'a0 \{81,\'a0 82,\'a0 0,0,0\},//9\
\'a0\'a0\'a0 \{76, 77,78\'a0 ,0 ,0\},\
\'a0\'a0\'a0 \{0,\'a0\'a0 0, 74 ,75,0\},\
\'a0\'a0\'a0 \{67, 68, 0 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{0,0, 59,60,61\}\
\'a0 \},\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{83, 84, 85,0,0\},//10\
\'a0\'a0\'a0 \{0, 79, 80,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{69, 70, 0 ,0,0\},\
\'a0\'a0\'a0 \{64, 65,66 ,0,0\},\
\'a0\'a0\'a0 \{0,0, 0,62,63\}\
\'a0 \},\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0 \{0,\'a0\'a0 0,\'a0 0,0,0\},//11\
\'a0\'a0\'a0 \{0, 0, 0,0,0\},\
\'a0\'a0\'a0 \{76, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{71, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{0, 0, 0 ,0,0\},\
\'a0\'a0\'a0 \{0,0, 0,0,0\}\
\'a0 \}\
\};\
\
\
\
\
//int octave =0;\
//String notename ;\
//int SMnoteindex ;\
\
\'a0\
void HandleNoteOn(byte channel, byte pitch, byte velocity)\
\{\
\
\'a0\'a0\'a0 if (velocity != 0)\
\'a0\'a0\'a0 \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 MIDImessage(1,\'a0 pitch, channel);// send noteon\
\'a0\'a0\'a0 \}else \{\
\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0 MIDImessage(0,\'a0 pitch, channel);\
\'a0\'a0\'a0 \}\
\}\
\
void HandleNoteOff(byte channel, byte pitch, byte velocity)\
\{\
\'a0\'a0\'a0 // Do whatever you want when you receive a Note Off.\
\'a0\'a0 MIDImessage(0,\'a0 pitch, channel);\'a0\'a0\
\
\}\
\'a0\'a0\'a0 void MIDImessage(int command, int MIDInote,int MIDIchannel) \{\
\'a0\'a0\'a0\'a0\'a0\'a0 Serial.println(MIDInote);\
\'a0\'a0\'a0\
\'a0\'a0\'a0 // octave = getOctave(MIDIchannel-10, MIDInote) ;\
\'a0\'a0\'a0\
\'a0\'a0\'a0 // SMnoteindex=(MIDInote % 12)<=8 ?(MIDInote % 12+3) : (MIDInote % 12-9)\'a0\'a0\'a0\'a0\'a0 ;\'a0 // c=0\'a0\'a0\'a0\
\'a0\'a0\'a0 //\'a0 A A# B\'a0 C C# D D# E F F# G G#\
\'a0\'a0\'a0 //\'a0 0 1\'a0 2\'a0 3 4\'a0 5 6\'a0 7 8 9\'a0 10 11\'a0 //SMARTLIGHT\'a0SCALE\
\'a0\'a0\'a0 //\'a0 9 10 11 0 1\'a0 2 3\'a0 4 5 6\'a0 7\'a0 8\'a0\'a0 // MIDI SCALE\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if(command==1)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.write(B01000101);// command to trun led on\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 else\'a0 if(command==0)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.write(B01000100);// command to trun led off\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.write((MIDInote % 12)<=8 ?(MIDInote % 12+3) : (MIDInote % 12-9) );// note from array\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.write(getOctave(MIDIchannel-11, MIDInote));// octave\'a0 note chnnel here is -11 .. diff library\
\'a0\'a0\'a0 \}\
\
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 int getOctave (int curString, int note ) \{\
\'a0\'a0\'a0\'a0\'a0 byte currOctave = 0;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 for (int octave = 0;\'a0 octave < 12;\'a0 octave++) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 for (int fret = 0; fret < 5; fret++) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if (octaves[ octave][curString][fret]==note) \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 currOctave= octave ;\
//\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.print("found NOte");\
//\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.println(note);\
//\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.print("current oct");\
//\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.println(currOctave);\
//\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.println(octaves[octave][curString][fret]);\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 return currOctave;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0 return currOctave;\
\'a0\'a0\'a0\'a0\'a0 \}\
\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 void setup()\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pinMode(8, OUTPUT);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 digitalWrite(8, HIGH);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 MIDI.setHandleNoteOn(HandleNoteOn);\'a0 // Put only the name of the function\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 MIDI.setHandleNoteOff(HandleNoteOff);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 // Initiate MIDI communications, listen to all channels\
\'a0\'a0\'a0\
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Serial.write(B01000000);// reset\'a0SMARTLIGHT\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 delay(1000);\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 // Connect the HandleNoteOn function to the library,\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 // so it is called upon reception of a NoteOn.\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 MIDI.begin(MIDI_CHANNEL_OMNI); // use midi setting to change baud rate\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\
\
void loop()\
\{\
\'a0\'a0\'a0 // Call MIDI.read the fastest you can for real-time performance.\
\'a0\'a0\'a0 MIDI.read();\'a0\'a0\'a0\
\}\
}